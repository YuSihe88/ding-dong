/**
 *   Wechaty Chatbot SDK - https://github.com/wechaty/wechaty
 *
 *   @copyright 2016 Huan LI (李卓桓) <https://github.com/huan>, and
 *                   Wechaty Contributors <https://github.com/wechaty>.
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 */
import { log, } from 'wechaty-puppet';
import { throwWechatifyError, guardWechatifyClass, } from './guard-wechatify-class.js';
class MiniProgram {
    /*
     * @hideconstructor
     */
    constructor(payload) {
        this.payload = payload;
        log.verbose('MiniProgram', 'constructor()');
        guardWechatifyClass.call(this, MiniProgram);
    }
    static get wechaty() { return throwWechatifyError(this); }
    get wechaty() { return throwWechatifyError(this.constructor); }
    /**
     *
     * Create
     *
     */
    static async create() {
        log.verbose('MiniProgram', 'create()');
        // TODO: get appid and username from wechat
        const payload = {
            appid: 'todo',
            description: 'todo',
            pagePath: 'todo',
            thumbKey: 'todo',
            thumbUrl: 'todo',
            title: 'todo',
            username: 'todo',
        };
        return new MiniProgram(payload);
    }
    appid() {
        return this.payload.appid;
    }
    title() {
        return this.payload.title;
    }
    pagePath() {
        return this.payload.pagePath;
    }
    username() {
        return this.payload.username;
    }
    description() {
        return this.payload.description;
    }
    thumbUrl() {
        return this.payload.thumbUrl;
    }
    thumbKey() {
        return this.payload.thumbKey;
    }
}
function wechatifyMiniProgram(wechaty) {
    log.verbose('MiniProgram', 'wechatifyMiniProgram(%s)', wechaty);
    class WechatifiedMiniProgram extends MiniProgram {
        static get wechaty() { return wechaty; }
        get wechaty() { return wechaty; }
    }
    return WechatifiedMiniProgram;
}
export { MiniProgram, wechatifyMiniProgram, };
//# sourceMappingURL=mini-program.js.map