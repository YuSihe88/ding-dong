"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.wechatifyLocation = exports.Location = void 0;
/**
 *   Wechaty Chatbot SDK - https://github.com/wechaty/wechaty
 *
 *   @copyright 2016 Huan LI (李卓桓) <https://github.com/huan>, and
 *                   Wechaty Contributors <https://github.com/wechaty>.
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 */
const wechaty_puppet_1 = require("wechaty-puppet");
const guard_wechatify_class_js_1 = require("./guard-wechatify-class.js");
class Location {
    /*
     * @hideconstructor
     */
    constructor(payload) {
        this.payload = payload;
        wechaty_puppet_1.log.verbose('Location', 'constructor()');
        guard_wechatify_class_js_1.guardWechatifyClass.call(this, Location);
    }
    static get wechaty() { return (0, guard_wechatify_class_js_1.throwWechatifyError)(this); }
    get wechaty() { return (0, guard_wechatify_class_js_1.throwWechatifyError)(this.constructor); }
    /**
     *
     * Create
     * @param poi string A point of interest (POI) is a specific point location that someone may find useful or interesting.
     *  See: https://en.wikipedia.org/wiki/Point_of_interest
     */
    static async create(poi) {
        wechaty_puppet_1.log.verbose('Location', 'create(%s)', poi);
        const payload = {
            accuracy: 15,
            address: '北京市北京市海淀区45 Chengfu Rd',
            latitude: 39.995120999999997,
            longitude: 116.334154,
            name: poi, // Huan(202109): FIXME: generate payload by poi
        };
        return new Location(payload);
    }
    toString() {
        return `Location<${this.payload.name}>`;
    }
    address() {
        return this.payload.address;
    }
    latitude() {
        return this.payload.latitude;
    }
    longitude() {
        return this.payload.longitude;
    }
    name() {
        return this.payload.name;
    }
    accuracy() {
        return this.payload.accuracy;
    }
}
exports.Location = Location;
function wechatifyLocation(wechaty) {
    wechaty_puppet_1.log.verbose('Location', 'wechatifyLocation(%s)', wechaty);
    class WechatifiedLocation extends Location {
        static get wechaty() { return wechaty; }
        get wechaty() { return wechaty; }
    }
    return WechatifiedLocation;
}
exports.wechatifyLocation = wechatifyLocation;
//# sourceMappingURL=location.js.map