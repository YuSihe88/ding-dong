#!/usr/bin/env ts-node
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const tstest_1 = __importDefault(require("tstest"));
const wechaty_1 = require("wechaty");
const wechaty_puppet_mock_1 = require("wechaty-puppet-mock");
const event_hot_handler_1 = require("./event-hot-handler");
tstest_1.default('EventHotHandler perfect restart testing', async (t) => {
    const wechaty = new wechaty_1.Wechaty({ puppet: new wechaty_puppet_mock_1.PuppetMock() });
    wechaty.use(event_hot_handler_1.EventHotHandler({ message: '../../tests/fixtures/on-message.ts' }));
    await wechaty.start();
    t.pass('should be able to start');
    await wechaty.stop();
    t.pass('should be able to stop after start');
    /**
     * Be aware at here: might leak micro tasks which will prevent the node process exit.
     */
});
//# sourceMappingURL=event-hot-handler.spec.js.map