"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventHotHandler = void 0;
/**
 * Author: Huan LI https://github.com/huan
 * Date: Jun 2020
 */
const wechaty_1 = require("wechaty");
const hot_import_1 = require("hot-import");
function EventHotHandler(config) {
    wechaty_1.log.verbose('WechatyPluginContrib', 'EventHotHandler("%s")', JSON.stringify(config));
    const absolutePathConfig = {};
    for (const key of Object.keys(config)) {
        const eventName = key;
        const modulePath = config[eventName];
        if (modulePath) {
            const absoluteFilename = hot_import_1.callerResolve(modulePath, __filename);
            absolutePathConfig[eventName] = absoluteFilename;
        }
    }
    return function EventHotHandlerPlugin(wechaty) {
        wechaty_1.log.verbose('WechatyPluginContrib', 'EventHotHandler installing on %s ...', wechaty);
        const uninstallerList = [];
        for (const key of Object.keys(absolutePathConfig)) {
            const eventName = key;
            const absoluteFilename = absolutePathConfig[eventName];
            if (absoluteFilename) {
                addEventHandler(wechaty, eventName, absoluteFilename).catch(e => wechaty_1.log.error('WechatyPluginContrib', 'EventHotHandler EventHotHandlerPlugin(%s, %s, %s) rejection: %s', wechaty, eventName, absoluteFilename, e));
                uninstallerList.push(() => hot_import_1.hotImport(absoluteFilename, false));
            }
        }
        return () => Promise.all(uninstallerList.map(uninstaller => uninstaller()));
    };
}
exports.EventHotHandler = EventHotHandler;
async function addEventHandler(wechaty, eventName, absoluteFilename) {
    try {
        const eventHandler = await hot_import_1.hotImport(absoluteFilename);
        wechaty.on(eventName, (...args) => {
            try {
                return eventHandler.apply(wechaty, args);
            }
            catch (e) {
                wechaty_1.log.error('WechatyPluginContrib', 'EventHotHandler EventHotHandlerPlugin(%s) listener(%s) exception%s', wechaty, eventName, e);
                wechaty.emit('error', e);
            }
        });
    }
    catch (e) {
        wechaty_1.log.error('WechatyPluginContrib', 'EventHotHandler EventHotHandlerPlugin() eventName(%s) hotImport(%s) rejection: %s', eventName, absoluteFilename, e);
        wechaty.emit('error', e);
    }
}
//# sourceMappingURL=event-hot-handler.js.map