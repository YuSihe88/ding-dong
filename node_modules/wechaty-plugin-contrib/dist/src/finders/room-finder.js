"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.roomFinder = void 0;
const wechaty_1 = require("wechaty");
function roomFinder(options) {
    wechaty_1.log.verbose('WechatyPluginContrib', 'roomFinder(%s)', JSON.stringify(options));
    if (!options) {
        return () => [];
    }
    if (!Array.isArray(options)) {
        options = [options];
    }
    const optionList = options;
    return async function findRoom(wechaty) {
        wechaty_1.log.silly('WechatyPluginContrib', 'roomFinder() roomFind(%s)', wechaty);
        const allRoomList = [];
        for (const option of optionList) {
            if (typeof option === 'string') {
                const room = wechaty.Room.load(option);
                await room.ready();
                allRoomList.push(room);
            }
            else if (option instanceof RegExp) {
                allRoomList.push(...await wechaty.Room.findAll({ topic: option }));
            }
            else if (option instanceof Function) {
                allRoomList.push(...await option(wechaty));
            }
            else {
                throw new Error('option is unknown: ' + option);
            }
        }
        const dedupedRoomList = [...new Set(allRoomList.filter(Boolean))];
        return dedupedRoomList;
    };
}
exports.roomFinder = roomFinder;
//# sourceMappingURL=room-finder.js.map