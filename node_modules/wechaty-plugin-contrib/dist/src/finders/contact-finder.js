"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.contactFinder = void 0;
const wechaty_1 = require("wechaty");
function contactFinder(options) {
    wechaty_1.log.verbose('WechatyPluginContrib', 'contactFinder(%s)', JSON.stringify(options));
    if (!options) {
        return () => [];
    }
    if (!Array.isArray(options)) {
        options = [options];
    }
    const optionList = options;
    return async function findContact(wechaty) {
        wechaty_1.log.silly('WechatyPluginContrib', 'contactFinder() contactFind(%s)', wechaty);
        const allContactList = [];
        for (const option of optionList) {
            if (typeof option === 'string') {
                const contact = wechaty.Contact.load(option);
                await contact.ready();
                allContactList.push(contact);
            }
            else if (option instanceof RegExp) {
                allContactList.push(...await wechaty.Contact.findAll({ name: option }));
                allContactList.push(...await wechaty.Contact.findAll({ alias: option }));
            }
            else if (option instanceof Function) {
                allContactList.push(...await option(wechaty));
            }
            else {
                throw new Error('option is unknown: ' + option);
            }
        }
        const dedupedContactList = [...new Set(allContactList.filter(Boolean))];
        return dedupedContactList;
    };
}
exports.contactFinder = contactFinder;
//# sourceMappingURL=contact-finder.js.map