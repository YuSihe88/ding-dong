"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.stringMatcher = void 0;
const wechaty_1 = require("wechaty");
function stringMatcher(options) {
    wechaty_1.log.verbose('WechatyPluginContrib', 'stringMatcher(%s)', JSON.stringify(options));
    if (!options) {
        return () => Promise.resolve(false);
    }
    if (!Array.isArray(options)) {
        options = [options];
    }
    const optionsList = options;
    return async function matchString(str) {
        wechaty_1.log.verbose('WechatyPluginContrib', 'stringMatcher() matchString(%s)', str);
        let isMatch = false;
        for (const option of optionsList) {
            if (typeof option === 'boolean') {
                isMatch = option;
            }
            if (typeof option === 'string') {
                isMatch = (str === option);
            }
            else if (option instanceof RegExp) {
                isMatch = option.test(str);
            }
            else if (option instanceof Function) {
                isMatch = await option(str);
            }
            else {
                throw new Error('configPassword is unknown: ' + option);
            }
            if (isMatch) {
                return true;
            }
        }
        // no match
        return false;
    };
}
exports.stringMatcher = stringMatcher;
//# sourceMappingURL=string-matcher.js.map