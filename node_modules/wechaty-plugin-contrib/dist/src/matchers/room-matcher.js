"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.roomMatcher = void 0;
const wechaty_1 = require("wechaty");
function roomMatcher(matcherOptions) {
    wechaty_1.log.verbose('WechatyPluginContrib', 'roomMatcher(%s)', matcherOptions instanceof RegExp
        ? matcherOptions === null || matcherOptions === void 0 ? void 0 : matcherOptions.toString()
        : JSON.stringify(matcherOptions));
    if (!matcherOptions) {
        return () => Promise.resolve(false);
    }
    if (!Array.isArray(matcherOptions)) {
        matcherOptions = [matcherOptions];
    }
    const matcherOptionList = matcherOptions;
    return async function matchRoom(room) {
        wechaty_1.log.silly('WechatyPluginContrib', 'roomMatcher() matchRoom(%s)', room);
        let isMatch = false;
        for (const option of matcherOptionList) {
            if (typeof option === 'boolean') {
                isMatch = option;
            }
            else if (typeof option === 'string') {
                isMatch = option === room.id;
            }
            else if (option instanceof Function) {
                isMatch = await option(room);
            }
            else if (option instanceof RegExp) {
                isMatch = option.test(await room.topic());
            }
            else {
                throw new Error('unknown option: ' + option);
            }
            if (isMatch) {
                return true;
            }
        }
        // no match
        return false;
    };
}
exports.roomMatcher = roomMatcher;
//# sourceMappingURL=room-matcher.js.map