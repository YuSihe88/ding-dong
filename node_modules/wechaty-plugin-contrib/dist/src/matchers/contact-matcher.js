"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.contactMatcher = void 0;
const wechaty_1 = require("wechaty");
function contactMatcher(matcherOptions) {
    wechaty_1.log.verbose('WechatyPluginContrib', 'contactMatcher(%s)', JSON.stringify(matcherOptions));
    if (!matcherOptions) {
        return () => Promise.resolve(false);
    }
    if (!Array.isArray(matcherOptions)) {
        matcherOptions = [matcherOptions];
    }
    const matcherOptionList = matcherOptions;
    return async function matchContact(contact) {
        wechaty_1.log.silly('WechatyPluginContrib', 'contactMatcher() matchContact(%s)', contact);
        let isMatch = false;
        for (const option of matcherOptionList) {
            if (typeof option === 'boolean') {
                isMatch = option;
            }
            else if (typeof option === 'string') {
                isMatch = option === contact.id;
            }
            else if (option instanceof Function) {
                isMatch = await option(contact);
            }
            else if (option instanceof RegExp) {
                isMatch = option.test(contact.name());
            }
            else {
                throw new Error('unknown option: ' + option);
            }
            if (isMatch) {
                return true;
            }
        }
        // no match
        return false;
    };
}
exports.contactMatcher = contactMatcher;
//# sourceMappingURL=contact-matcher.js.map